AWSTemplateFormatVersion: '2010-09-09'
Description: 'EKS Cluster and Node IAM Roles'

Resources:
  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AWS::StackName}-EKSClusterRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: eks.amazonaws.com
            Action:
              - sts:AssumeRole
              - sts:TagSession
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSNetworkingPolicy
        - arn:aws:iam::aws:policy/AmazonEKSComputePolicy
        - arn:aws:iam::aws:policy/AmazonEKSBlockStoragePolicy
        - arn:aws:iam::aws:policy/AmazonEKSLoadBalancingPolicy

  EKSNodeRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AWS::StackName}-EKSNodeRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodeMinimalPolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPullOnly

Outputs:
  ClusterRoleArn:
    Description: ARN of the EKS Cluster Role
    Value: !GetAtt EKSClusterRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}::ClusterRoleArn'

  NodeRoleArn:
    Description: ARN of the EKS Node Role
    Value: !GetAtt EKSNodeRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}::NodeRoleArn'
    